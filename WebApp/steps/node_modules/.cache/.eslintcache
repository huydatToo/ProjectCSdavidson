[{"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\index.js":"1","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\Home.js":"2","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\utils\\WalletContext.js":"3","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\CreateNewProject.js":"4","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\utils\\SmartContract.js":"5","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\ProjectPage.js":"6","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\CodeEditor.js":"7","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\ProjectDevelopment.js":"8","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\ModalDetails.js":"9","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\ModalChanges.js":"10","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\PageLearn.js":"11","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\newHome.js":"12","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\NewHome.js":"13"},{"size":1141,"mtime":1709056058294,"results":"14","hashOfConfig":"15"},{"size":6342,"mtime":1708452586235,"results":"16","hashOfConfig":"15"},{"size":1675,"mtime":1709831124367,"results":"17","hashOfConfig":"15"},{"size":5262,"mtime":1706628859088,"results":"18","hashOfConfig":"15"},{"size":10619,"mtime":1709821705927,"results":"19","hashOfConfig":"15"},{"size":11398,"mtime":1709838766015,"results":"20","hashOfConfig":"15"},{"size":378,"mtime":1706628695019,"results":"21","hashOfConfig":"15"},{"size":10038,"mtime":1709837847177,"results":"22","hashOfConfig":"15"},{"size":748,"mtime":1706628729105,"results":"23","hashOfConfig":"15"},{"size":734,"mtime":1706628714401,"results":"24","hashOfConfig":"15"},{"size":2367,"mtime":1708458788192,"results":"25","hashOfConfig":"15"},{"size":148,"mtime":1708460389000,"results":"26","hashOfConfig":"15"},{"size":5077,"mtime":1709833454615,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1j40jez",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\index.js",[],[],["71"],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\Home.js",["72"],[],"import { motion, AnimatePresence  } from 'framer-motion';\nimport downArrow from '../assets/down-arrow-svgrepo-com.svg';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useWallet } from '../utils/WalletContext';\nimport PageLearn from './PageLearn'\nimport { Link } from 'react-scroll';\n\n\n// the home page\nfunction Home() {\n  const { contract } = useWallet();\n  const scrollRef = useRef(null)\n  const navigate = useNavigate()\n  const [isButtons, setIsButtons] = useState({new_project: 0, my: 0})\n  const [lastProjects, setLastProjects]  = useState({lastProjects: [], localProjects: []})\n  const [hoverDown, setHoverDown]  = useState(false)\n  const { isConnected, checkWalletConnection, setIsConnected, setAccount } = useWallet();\n\n  // connect smart wallet function\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        setIsConnected(true);\n        setAccount(accounts[0]);\n        setIsButtons({new_project: 0, new: 2})\n      } catch (error) {\n        console.error(\"Wallet connection error:\", error);\n      }\n    }\n  };\n\n  // the function check whether a user is connected or not\n  const checkConnectedOnButtonPress = (buttonPressed) => {\n    if (buttonPressed === \"createNewProject\" && isConnected === false) {\n      if (isButtons.new_project === 1) {\n        connectWallet()\n      } else if (isButtons.new_project === 0) {\n        setIsButtons({...isButtons, new_project: 1})\n      }\n    } else if (buttonPressed === \"createNewProject\" && isConnected === true) {\n      navigate('/createNewProject')\n    }\n  }\n\n  // TEMP\n  const getLastProjects = async () => {\n    let lastProjectsNow = await contract.getLastProjects();\n    lastProjectsNow = lastProjectsNow.filter(str => str !== \"\");\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/getLocalProjects', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n\n      const data = await response.json(); \n      setLastProjects({lastProjects: lastProjectsNow, localProjects: data.projects})\n    } catch (error) {\n      console.error('Error:', error);\n      setLastProjects({lastProjects: lastProjectsNow, localProjects: []})\n    }\n  }\n\n  // the function initiate the page\n  useEffect(() => {\n    checkWalletConnection();\n    if (isConnected) {\n      setIsButtons({new_project: 0, new: 2})\n      getLastProjects()\n    }\n  }, [checkWalletConnection, isConnected]);\n\n  // returns the page's react component\n  return (\n    <div className=\"background\">\n      <div name=\"pageOne\" className='pageTwo center'>\n      <div className='moveUp'>\n        <div className='line lineGapHome'>\n          <div className='box-search '>\n            <h1 className='Title'>Search</h1>\n            <input className='search' type=\"text\"/>\n          </div>\n        </div>\n\n        <div className='line lineGapHome'>\n          <div className='box-projects'>\n            <h1 className='Title'>Popular Projects</h1>\n            {lastProjects.lastProjects.map((item, index) => (\n            <motion.div onClick={() => {navigate(`project/${item}`)}} key={index} whileHover={{scale: 1.05}} initial={{ scale: 0 }} animate={{ scale: 1 }} transition={{ type: \"spring\", duration: 0.7 }} className='project-box-load'>\n              <span className='project-box-header'>{item}</span>\n              <span>----------- | -----------</span>\n            </motion.div>\n            ))}\n          </div>\n\n          <div>\n            <div onClick={() => {checkConnectedOnButtonPress(\"createNewProject\")}}>\n            <AnimatePresence initial={false} mode='wait'>\n            {isButtons.new_project === 0 ?\n            <motion.div key={\"createNewProjectButton\"} whileTap={{scale: 0.9}} whileHover={{scale: 1.03}} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: .91 }} transition={{ type: \"spring\", duration: 0.1 }} className='box-create-project border-step4'>\n              <motion.h1 initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: 0.9, opacity: 0.2 }} transition={{ type: \"spring\", duration: 0.1 }}  key={\"createNewProjectButtonH1\"} className='Title TitleCreatePorject'>Create <br /> New Project</motion.h1>\n            </motion.div>\n            : \n            <motion.div key={\"connectYourWalletNewProjectButton\"} whileTap={{scale: 0.9}} whileHover={{scale: 1.03}} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: .91 }} transition={{ type: \"spring\", duration: 0.1 }} className='box-create-project'>\n              <motion.h1 initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: 0.9, opacity: 0.2 }} transition={{ type: \"spring\", duration: 0.1 }}  key={\"connectYourWalletNewProjectButtonH1\"} className='Title TitleCreatePorject'>Connect <br /> Your wallet</motion.h1>\n            </motion.div>\n            }\n            </AnimatePresence>\n            </div>\n\n            <Link to=\"pageTwo\" smooth={true} duration={500}>\n            <motion.div onMouseEnter={() => setHoverDown(true)} onMouseLeave={() => setHoverDown(false)}  whileHover={{scale: 1.03}} transition={{ type: \"spring\", duration: 0.7 }} className='box-arrow-down'>\n              <motion.img animate={{ y: hoverDown ? 40 : 0 }} transition={{ type: \"spring\", duration: 0.7 }} className='arrowDown' src={downArrow} alt=\"\" />\n            </motion.div>\n            </Link>\n          </div>\n\n          <div className='box-projects'>\n            <h1 className='Title'>Recent activity</h1>\n            {lastProjects.localProjects.map((item, index) => (\n            <motion.div onClick={() => {navigate(`project/${item}`)}} key={index} whileHover={{scale: 1.05}} initial={{ scale: 0 }} animate={{ scale: 1 }} transition={{ type: \"spring\", duration: 0.7 }} className='project-box-load'>\n              <span className='project-box-header'>{item}</span>\n              <span>----------- | -----------</span>\n            </motion.div>\n            ))}\n\n          </div>\n        </div>\n      </div>\n      </div>\n\n      <div name=\"pageTwo\" className='pageTwo background2 centerLearn'>\n        <PageLearn scroll={scrollRef}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\utils\\WalletContext.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\CreateNewProject.js",["73"],[],"import React, {useState, useEffect} from 'react';\r\nimport { useWallet } from '../utils/WalletContext';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport CompleteSvg from '../assets/complete-svgrepo-com.svg';\r\nimport HomeSvg from '../assets/homeDark.svg';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// the page of creating a new project\r\nconst CreateNewProject = () => {\r\n    const { contract } = useWallet();\r\n    const [step, setStep] = useState(1);\r\n    const [name, setName] = useState(\"\");\r\n    const [path, setPath] = useState(\"\")\r\n    const navigate = useNavigate()\r\n\r\n\r\n    // the function upload a local project and call the create new project on the smart contract\r\n    const createProjectFunction = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/api/upload', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({ \"path\": path, \"name\": name }),\r\n            });\r\n        \r\n            if (!response.ok) {\r\n              throw new Error('Failed to upload file')\r\n            }\r\n        \r\n            const data = await response.json(); \r\n            const _CID = data.ipfsCID;\r\n            const transaction = await contract.createProject(_CID, name)\r\n            await transaction.wait();\r\n            navigate(`/project/${name}`)\r\n            \r\n        } catch (error) {\r\n            console.error('Error uploading file:', error);\r\n        }\r\n    }\r\n\r\n    // the functions dictate the ui state\r\n    const nextStep = () => {\r\n        if (step !== 3) {\r\n            setStep(step+1)\r\n        } else {\r\n            createProjectFunction(path)\r\n        }\r\n    }\r\n\r\n    const pastePath = async () => {\r\n        const text = await navigator.clipboard.readText();\r\n        setPath(text)\r\n        setStep(step+1)\r\n    }\r\n    \r\n    // the function returns the current form step\r\n    const getStep = () => {\r\n        if (step === 1) {\r\n        return (\r\n            <div className='center-new-project'>\r\n            <motion.div whileHover={{scale: 1.05}} initial={{ scale: 0 }} animate={{ scale: 1 }} transition={{ type: \"spring\", duration: 0.7 }} style={{cursor: \"default\"}} className='box-new-project'>\r\n                <h1>Project Name</h1>\r\n                <input onChange={(e) => setName(e.target.value)} type=\"text\" className=\"newProjectInput\" />\r\n            </motion.div>\r\n            <AnimatePresence initial={false} mode='wait'>\r\n            {name.length > 3 ? (\r\n            <motion.div key={\"divSVG\"} exit={{y: 10}} whileHover={{scale: 1.05}} initial={{y: 0 }} animate={{y: 210}} transition={{ type: \"spring\", duration: 0.7 }} onClick={() => nextStep()} className='button-new-project'>\r\n                <motion.img  transition={{ type: \"spring\", duration: 1.5 }} initial={{opacity: -1 }} animate={{opacity: 1}} key={\"svgSVG\"} className='arrowDown' src={CompleteSvg} alt=\"\" />\r\n            </motion.div>\r\n            ) : <></>}\r\n            </AnimatePresence>\r\n            </div>\r\n\r\n        )} else if (step === 2 || step === 3) {\r\n        return (\r\n            <div className='center-new-project'>\r\n            <motion.div style={{cursor: \"default\"}} whileHover={{scale: 1.05}} initial={{ scale: 0 }} animate={{ scale: 1 }} transition={{ type: \"spring\", duration: 0.7 }} className='box-new-project'>\r\n                <h1>Project Initial Folder</h1>\r\n                {step === 2 ?\r\n                <div onClick={(e) => {pastePath(e)}} style={{cursor: \"pointer\"}} className=\"newProjectInput\">\r\n                    <span className='pastePathButton'>Paste Project Path</span>\r\n                </div>\r\n                :<input value={path} onChange={(e) => setPath(e.target.value)} placeholder='Project Path' type=\"text\" className=\"newProjectInput\" />}\r\n            </motion.div>\r\n\r\n            <AnimatePresence initial={false} mode='wait'>\r\n            {path.length > 3 ? (\r\n                <motion.div key={\"divSVG\"} exit={{y: 10}} whileHover={{scale: 1.05}} initial={{y: 0 }} animate={{y: 210}} transition={{ type: \"spring\", duration: 0.7 }} onClick={() => nextStep()} className='button-new-project'>\r\n                    <motion.img transition={{ type: \"spring\", duration: 1.5 }} initial={{opacity: -1 }} animate={{opacity: 1}} key={\"svgSVG\"} className='arrowDown' src={CompleteSvg} alt=\"\" />\r\n                </motion.div>\r\n            ) : <></>}\r\n            </AnimatePresence>\r\n            </div>\r\n\r\n        )}\r\n    }\r\n\r\n\r\n    return (\r\n    <div className='background center'>\r\n        {getStep()}\r\n        <motion.div onClick={() => {navigate('/')}} transition={{ type: \"spring\", duration: 1.3 }} initial={{opacity: 0 }} animate={{opacity: 1}} className='HomeButton'>\r\n            <AnimatePresence initial={false} mode='wait'>\r\n                { step === 0 || (step === 1 && name.length < 3) || ((step === 2 || step === 3) && path.length < 3) ? (<motion.img key={\"svgSVG\"} transition={{ type: \"spring\", duration: 1.3 }} exit={{opacity: 0}} initial={{opacity: 0 }} animate={{opacity: 1}}  className='HomeButtonDark' src={HomeSvg} alt=\"\" />) : null}\r\n            </AnimatePresence>\r\n        </motion.div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CreateNewProject;\r\n","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\utils\\SmartContract.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\ProjectPage.js",["74"],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\CodeEditor.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\ProjectDevelopment.js",["75","76","77","78"],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\ModalDetails.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\ModalChanges.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\PageLearn.js",["79"],[],"import { useEffect } from \"react\";\r\nimport { animate, useScroll, motion } from \"framer-motion\";\r\n\r\nconst PageLearn = ({scroll}) => {\r\n  const animControls = scroll;\r\n\r\n  useScroll().scrollYProgress.on(\"change\", (yProgress) => {\r\n    if (!animControls.current) return;\r\n    animControls.current.time = yProgress * animControls.current.duration;\r\n    \r\n    console.log(animControls.current.time, yProgress, animControls.current.duration)\r\n  });\r\n\r\n  useEffect(() => {\r\n    animControls.current = animate([\r\n      [\".titleLearn\", { opacity: 0, y: -100 }, { ease: \"easeOut\", duration: 3 }],\r\n      [\".titleLearn\", { y: 0, opacity: 1 }, { ease: \"easeOut\", duration: 3, at: 1 }],\r\n      [\".explainBox\", { opacity: 1, x: 0 }, { ease: \"easeOut\", duration: 3, at: 1 }],\r\n      [\".explainBox\", { opacity: 0, x: 100}, { ease: \"easeOut\", duration: 3, at: 0 }],\r\n      [\".explainBox1\", { opacity: 1, x: 0 }, { ease: \"easeOut\", duration: 3, at: 1 }],\r\n      [\".explainBox1\", { opacity: 0, x: -100}, { ease: \"easeOut\", duration: 3, at: 0 }],\r\n      [\".explainBox2\", { opacity: 1, y: 0 }, { ease: \"easeOut\", duration: 3, at: 1 }],\r\n      [\".explainBox2\", { opacity: 0, y: 100}, { ease: \"easeOut\", duration: 3, at: 0 }],\r\n      \r\n    ]);\r\n    animControls.current.pause();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=''>\r\n      <motion.h1         \r\n      initial={{opacity: 0, y: -100}}\r\n      className=\"titleLearn\"\r\n      >How it works</motion.h1>\r\n\r\n      <div className=\"gridExplains\">\r\n\r\n      <motion.div initial={{opacity: 0}} className=\"explainBox1\">\r\n        <span>1. Initiate A New Project</span>\r\n      </motion.div>\r\n\r\n      <motion.div initial={{opacity: 0}} className=\"explainBox2\">\r\n        <span>2. Share To Others</span>\r\n      </motion.div>\r\n\r\n      <motion.div initial={{opacity: 0}} className=\"explainBox\">\r\n        <span>3. Upload A Change Proposal</span>\r\n      </motion.div>\r\n\r\n      <motion.div initial={{opacity: 0}} className=\"explainBox1\">\r\n        <span>4. Vote For Change Proposals</span>\r\n      </motion.div>\r\n\r\n      <motion.div initial={{opacity: 0}} className=\"explainBox2\">\r\n        <span>1. Initiate A New Project</span>\r\n      </motion.div>\r\n\r\n      <motion.div initial={{opacity: 0}} className=\"explainBox\">\r\n        <span>1. Initiate A New Project</span>\r\n      </motion.div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageLearn;\r\n","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\newHome.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\NewHome.js",["80","81"],[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":74,"column":6,"nodeType":"86","endLine":74,"endColumn":42,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":26,"nodeType":"90","messageId":"91","endLine":1,"endColumn":35},{"ruleId":"84","severity":1,"message":"92","line":197,"column":6,"nodeType":"86","endLine":197,"endColumn":30,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":65,"column":32,"nodeType":"96","messageId":"97","endLine":65,"endColumn":34},{"ruleId":"94","severity":1,"message":"95","line":87,"column":32,"nodeType":"96","messageId":"97","endLine":87,"endColumn":34},{"ruleId":"84","severity":1,"message":"98","line":127,"column":8,"nodeType":"86","endLine":127,"endColumn":18,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"100","line":198,"column":23,"nodeType":"96","messageId":"97","endLine":198,"endColumn":25},{"ruleId":"84","severity":1,"message":"101","line":27,"column":6,"nodeType":"86","endLine":27,"endColumn":8,"suggestions":"102"},{"ruleId":"88","severity":1,"message":"103","line":17,"column":15,"nodeType":"90","messageId":"91","endLine":17,"endColumn":22},{"ruleId":"84","severity":1,"message":"104","line":25,"column":10,"nodeType":"86","endLine":25,"endColumn":12,"suggestions":"105"},"no-new-object",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLastProjects'. Either include it or remove the dependency array.","ArrayExpression",["107"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getProjectDetails'. Either include it or remove the dependency array.",["108"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getChangeProposals' and 'getMyChanges'. Either include them or remove the dependency array.",["109"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'animControls'. Either include it or remove the dependency array.",["110"],"'myBento' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkWalletConnection' and 'getLastProjects'. Either include them or remove the dependency array.",["111"],"no-object-constructor",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [checkWalletConnection, getLastProjects, isConnected]",{"range":"122","text":"123"},"Update the dependencies array to be: [changeProposalOrGoBack, getProjectDetails]",{"range":"124","text":"125"},"Update the dependencies array to be: [contract, getChangeProposals, getMyChanges]",{"range":"126","text":"127"},"Update the dependencies array to be: [animControls]",{"range":"128","text":"129"},"Update the dependencies array to be: [checkWalletConnection, getLastProjects]",{"range":"130","text":"131"},[2541,2577],"[checkWalletConnection, getLastProjects, isConnected]",[6833,6857],"[changeProposalOrGoBack, getProjectDetails]",[4262,4272],"[contract, getChangeProposals, getMyChanges]",[1262,1264],"[animControls]",[1015,1017],"[checkWalletConnection, getLastProjects]"]