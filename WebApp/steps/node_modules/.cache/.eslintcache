[{"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\index.js":"1","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\Home.js":"2","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\utils\\WalletContext.js":"3","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\CreateNewProject.js":"4","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\utils\\SmartContract.js":"5","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\ProjectPage.js":"6","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\CodeEditor.js":"7","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\ProjectDevelopment.js":"8","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\ModalDetails.js":"9","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\ModalChanges.js":"10"},{"size":919,"mtime":1704035804991,"results":"11","hashOfConfig":"12"},{"size":4863,"mtime":1703246268083,"results":"13","hashOfConfig":"12"},{"size":1460,"mtime":1701118610971,"results":"14","hashOfConfig":"12"},{"size":5401,"mtime":1703244676961,"results":"15","hashOfConfig":"12"},{"size":14936,"mtime":1704653891299,"results":"16","hashOfConfig":"12"},{"size":10166,"mtime":1704656330847,"results":"17","hashOfConfig":"12"},{"size":322,"mtime":1704307235654,"results":"18","hashOfConfig":"12"},{"size":6527,"mtime":1704656163582,"results":"19","hashOfConfig":"12"},{"size":694,"mtime":1704644115192,"results":"20","hashOfConfig":"12"},{"size":668,"mtime":1704644383590,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j40jez",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\index.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\Home.js",["54"],[],"import { motion, AnimatePresence  } from 'framer-motion';\nimport downArrow from '../assets/down-arrow-svgrepo-com.svg';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useWallet } from '../utils/WalletContext';\n\n\nfunction Home() {\n  const { contract } = useWallet();\n  const navigate = useNavigate()\n  const [isButtons, setIsButtons] = useState({new_project: 0, my: 0})\n  const [lastProjects, setLastProjects]  = useState([])\n  const { isConnected, checkWalletConnection, setIsConnected, setAccount } = useWallet();\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        setIsConnected(true);\n        setAccount(accounts[0]);\n        setIsButtons({new_project: 0, new: 2})\n      } catch (error) {\n        console.error(\"Wallet connection error:\", error);\n      }\n    }\n  };\n\n  const checkConnectedOnButtonPress = (buttonPressed) => {\n    if (buttonPressed === \"createNewProject\" && isConnected === false) {\n      if (isButtons.new_project === 1) {\n        connectWallet()\n      } else if (isButtons.new_project === 0) {\n        setIsButtons({...isButtons, new_project: 1})\n      }\n    } else if (buttonPressed === \"createNewProject\" && isConnected === true) {\n      navigate('/createNewProject')\n    }\n  }\n\n  const getLastProjects = async () => {\n    const lastProjectsNow = await contract.getLastProjects();\n    setLastProjects(lastProjectsNow)\n  }\n\n  useEffect(() => {\n    checkWalletConnection();\n    if (isConnected) {\n      setIsButtons({new_project: 0, new: 2})\n      getLastProjects()\n    }\n  }, [checkWalletConnection, isConnected]);\n\n  return (\n    <div className=\"background center\">\n      <div className='moveUp'>\n        <div className='line'>\n          <div className='box-search '>\n            <h1 className='Title'>Search</h1>\n            <input className='search' type=\"text\"/>\n          </div>\n        </div>\n\n        <div className='line'>\n          <div className='box-projects'>\n            <h1 className='Title'>Popular Projects</h1>\n            <motion.div whileHover={{scale: 1.05}} initial={{ scale: 0 }} animate={{ scale: 1 }} transition={{ type: \"spring\", duration: 0.7 }} className='project-box'>\n              <span className='project-box-header'>Project name</span>\n              <span>creation time | participants</span>\n            </motion.div>\n          </div>\n\n          <div>\n            <div onClick={() => {checkConnectedOnButtonPress(\"createNewProject\")}}>\n            <AnimatePresence initial={false} mode='wait'>\n            {isButtons.new_project === 0 ?\n            <motion.div key={\"createNewProjectButton\"} whileTap={{scale: 0.9}} whileHover={{scale: 1.03}} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: .91 }} transition={{ type: \"spring\", duration: 0.1 }} className='box-create-project border-step4'>\n              <motion.h1 initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: 0.9, opacity: 0.2 }} transition={{ type: \"spring\", duration: 0.1 }}  key={\"createNewProjectButtonH1\"} className='Title TitleCreatePorject'>Create <br /> New Project</motion.h1>\n            </motion.div>\n            : \n            <motion.div key={\"connectYourWalletNewProjectButton\"} whileTap={{scale: 0.9}} whileHover={{scale: 1.03}} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: .91 }} transition={{ type: \"spring\", duration: 0.1 }} className='box-create-project'>\n              <motion.h1 initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: 0.9, opacity: 0.2 }} transition={{ type: \"spring\", duration: 0.1 }}  key={\"connectYourWalletNewProjectButtonH1\"} className='Title TitleCreatePorject'>Connect <br /> Your wallet</motion.h1>\n            </motion.div>\n            }\n            </AnimatePresence>\n            </div>\n\n            <motion.div whileHover={{scale: 1.03}} animate={{ scale: 1 }} transition={{ type: \"spring\", duration: 0.7 }} className='box-arrow-down'>\n              <img className='arrowDown' src={downArrow} alt=\"\" />\n            </motion.div>\n          </div>\n\n          <div className='box-projects'>\n            <h1 className='Title'>Recent activity</h1>\n\n            {lastProjects.map((item, index) => (\n            <motion.div onClick={() => {navigate(`project/${item}`)}} key={index} whileHover={{scale: 1.05}} initial={{ scale: 0 }} animate={{ scale: 1 }} transition={{ type: \"spring\", duration: 0.7 }} className='project-box-load'>\n              <span className='project-box-header'>{item}</span>\n              <span>----------- | -----------</span>\n            </motion.div>\n            ))}\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n",["55"],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\utils\\WalletContext.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\CreateNewProject.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\utils\\SmartContract.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\ProjectPage.js",["56","57"],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\CodeEditor.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\ProjectDevelopment.js",["58"],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\ModalDetails.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\ModalChanges.js",[],[],{"ruleId":"59","severity":1,"message":"60","line":51,"column":6,"nodeType":"61","endLine":51,"endColumn":42,"suggestions":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":121,"column":13,"nodeType":"67","messageId":"68","endLine":121,"endColumn":21},{"ruleId":"59","severity":1,"message":"69","line":168,"column":6,"nodeType":"61","endLine":168,"endColumn":8,"suggestions":"70"},{"ruleId":"59","severity":1,"message":"71","line":88,"column":8,"nodeType":"61","endLine":88,"endColumn":18,"suggestions":"72"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLastProjects'. Either include it or remove the dependency array.","ArrayExpression",["73"],"no-new-object",["74"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getProjectDetails'. Either include it or remove the dependency array.",["75"],"React Hook useEffect has missing dependencies: 'getChangeProposals' and 'getMyChanges'. Either include them or remove the dependency array.",["76"],{"desc":"77","fix":"78"},"no-object-constructor",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [checkWalletConnection, getLastProjects, isConnected]",{"range":"83","text":"84"},"Update the dependencies array to be: [getProjectDetails]",{"range":"85","text":"86"},"Update the dependencies array to be: [contract, getChangeProposals, getMyChanges]",{"range":"87","text":"88"},[1686,1722],"[checkWalletConnection, getLastProjects, isConnected]",[5839,5841],"[getProjectDetails]",[2696,2706],"[contract, getChangeProposals, getMyChanges]"]