[{"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\index.js":"1","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\Home.js":"2","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\utils\\WalletContext.js":"3","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\CreateNewProject.js":"4","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\utils\\SmartContract.js":"5","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\ProjectPage.js":"6","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\CodeEditor.js":"7","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\ProjectDevelopment.js":"8","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\ModalDetails.js":"9","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\ModalChanges.js":"10","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\PageLearn.js":"11"},{"size":1027,"mtime":1706629832507,"results":"12","hashOfConfig":"13"},{"size":6342,"mtime":1707668243403,"results":"14","hashOfConfig":"13"},{"size":1675,"mtime":1706629779402,"results":"15","hashOfConfig":"13"},{"size":5262,"mtime":1706628859088,"results":"16","hashOfConfig":"13"},{"size":16007,"mtime":1707595747146,"results":"17","hashOfConfig":"13"},{"size":11383,"mtime":1707131443713,"results":"18","hashOfConfig":"13"},{"size":378,"mtime":1706628695019,"results":"19","hashOfConfig":"13"},{"size":8021,"mtime":1707136260368,"results":"20","hashOfConfig":"13"},{"size":748,"mtime":1706628729105,"results":"21","hashOfConfig":"13"},{"size":734,"mtime":1706628714401,"results":"22","hashOfConfig":"13"},{"size":2367,"mtime":1707671809984,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wh0tal",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\index.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\Home.js",["59"],[],"import { motion, AnimatePresence  } from 'framer-motion';\nimport downArrow from '../assets/down-arrow-svgrepo-com.svg';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useWallet } from '../utils/WalletContext';\nimport PageLearn from './PageLearn'\nimport { Link } from 'react-scroll';\n\n\n// the home page\nfunction Home() {\n  const { contract } = useWallet();\n  const scrollRef = useRef(null)\n  const navigate = useNavigate()\n  const [isButtons, setIsButtons] = useState({new_project: 0, my: 0})\n  const [lastProjects, setLastProjects]  = useState({lastProjects: [], localProjects: []})\n  const [hoverDown, setHoverDown]  = useState(false)\n  const { isConnected, checkWalletConnection, setIsConnected, setAccount } = useWallet();\n\n  // connect smart wallet function\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        setIsConnected(true);\n        setAccount(accounts[0]);\n        setIsButtons({new_project: 0, new: 2})\n      } catch (error) {\n        console.error(\"Wallet connection error:\", error);\n      }\n    }\n  };\n\n  // the function check whether a user is connected or not\n  const checkConnectedOnButtonPress = (buttonPressed) => {\n    if (buttonPressed === \"createNewProject\" && isConnected === false) {\n      if (isButtons.new_project === 1) {\n        connectWallet()\n      } else if (isButtons.new_project === 0) {\n        setIsButtons({...isButtons, new_project: 1})\n      }\n    } else if (buttonPressed === \"createNewProject\" && isConnected === true) {\n      navigate('/createNewProject')\n    }\n  }\n\n  // TEMP\n  const getLastProjects = async () => {\n    let lastProjectsNow = await contract.getLastProjects();\n    lastProjectsNow = lastProjectsNow.filter(str => str !== \"\");\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/getLocalProjects', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n\n      const data = await response.json(); \n      setLastProjects({lastProjects: lastProjectsNow, localProjects: data.projects})\n    } catch (error) {\n      console.error('Error:', error);\n      setLastProjects({lastProjects: lastProjectsNow, localProjects: []})\n    }\n  }\n\n  // the function initiate the page\n  useEffect(() => {\n    checkWalletConnection();\n    if (isConnected) {\n      setIsButtons({new_project: 0, new: 2})\n      getLastProjects()\n    }\n  }, [checkWalletConnection, isConnected]);\n\n  // returns the page's react component\n  return (\n    <div className=\"background\">\n      <div name=\"pageOne\" className='pageTwo center'>\n      <div className='moveUp'>\n        <div className='line lineGapHome'>\n          <div className='box-search '>\n            <h1 className='Title'>Search</h1>\n            <input className='search' type=\"text\"/>\n          </div>\n        </div>\n\n        <div className='line lineGapHome'>\n          <div className='box-projects'>\n            <h1 className='Title'>Popular Projects</h1>\n            {lastProjects.lastProjects.map((item, index) => (\n            <motion.div onClick={() => {navigate(`project/${item}`)}} key={index} whileHover={{scale: 1.05}} initial={{ scale: 0 }} animate={{ scale: 1 }} transition={{ type: \"spring\", duration: 0.7 }} className='project-box-load'>\n              <span className='project-box-header'>{item}</span>\n              <span>----------- | -----------</span>\n            </motion.div>\n            ))}\n          </div>\n\n          <div>\n            <div onClick={() => {checkConnectedOnButtonPress(\"createNewProject\")}}>\n            <AnimatePresence initial={false} mode='wait'>\n            {isButtons.new_project === 0 ?\n            <motion.div key={\"createNewProjectButton\"} whileTap={{scale: 0.9}} whileHover={{scale: 1.03}} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: .91 }} transition={{ type: \"spring\", duration: 0.1 }} className='box-create-project border-step4'>\n              <motion.h1 initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: 0.9, opacity: 0.2 }} transition={{ type: \"spring\", duration: 0.1 }}  key={\"createNewProjectButtonH1\"} className='Title TitleCreatePorject'>Create <br /> New Project</motion.h1>\n            </motion.div>\n            : \n            <motion.div key={\"connectYourWalletNewProjectButton\"} whileTap={{scale: 0.9}} whileHover={{scale: 1.03}} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: .91 }} transition={{ type: \"spring\", duration: 0.1 }} className='box-create-project'>\n              <motion.h1 initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: 0.9, opacity: 0.2 }} transition={{ type: \"spring\", duration: 0.1 }}  key={\"connectYourWalletNewProjectButtonH1\"} className='Title TitleCreatePorject'>Connect <br /> Your wallet</motion.h1>\n            </motion.div>\n            }\n            </AnimatePresence>\n            </div>\n\n            <Link to=\"pageTwo\" smooth={true} duration={500}>\n            <motion.div onMouseEnter={() => setHoverDown(true)} onMouseLeave={() => setHoverDown(false)}  whileHover={{scale: 1.03}} transition={{ type: \"spring\", duration: 0.7 }} className='box-arrow-down'>\n              <motion.img animate={{ y: hoverDown ? 40 : 0 }} transition={{ type: \"spring\", duration: 0.7 }} className='arrowDown' src={downArrow} alt=\"\" />\n            </motion.div>\n            </Link>\n          </div>\n\n          <div className='box-projects'>\n            <h1 className='Title'>Recent activity</h1>\n            {lastProjects.localProjects.map((item, index) => (\n            <motion.div onClick={() => {navigate(`project/${item}`)}} key={index} whileHover={{scale: 1.05}} initial={{ scale: 0 }} animate={{ scale: 1 }} transition={{ type: \"spring\", duration: 0.7 }} className='project-box-load'>\n              <span className='project-box-header'>{item}</span>\n              <span>----------- | -----------</span>\n            </motion.div>\n            ))}\n\n          </div>\n        </div>\n      </div>\n      </div>\n\n      <div name=\"pageTwo\" className='pageTwo background2 centerLearn'>\n        <PageLearn scroll={scrollRef}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n",["60"],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\utils\\WalletContext.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\CreateNewProject.js",["61"],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\utils\\SmartContract.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\ProjectPage.js",["62"],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\CodeEditor.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\ProjectDevelopment.js",["63","64"],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\ModalDetails.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\components\\ModalChanges.js",[],[],"C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\src\\pages\\PageLearn.js",["65"],[],{"ruleId":"66","severity":1,"message":"67","line":74,"column":6,"nodeType":"68","endLine":74,"endColumn":42,"suggestions":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":26,"nodeType":"74","messageId":"75","endLine":1,"endColumn":35},{"ruleId":"66","severity":1,"message":"76","line":196,"column":6,"nodeType":"68","endLine":196,"endColumn":8,"suggestions":"77"},{"ruleId":"66","severity":1,"message":"78","line":101,"column":8,"nodeType":"68","endLine":101,"endColumn":18,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":156,"column":23,"nodeType":"82","messageId":"83","endLine":156,"endColumn":25},{"ruleId":"66","severity":1,"message":"84","line":27,"column":6,"nodeType":"68","endLine":27,"endColumn":8,"suggestions":"85"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLastProjects'. Either include it or remove the dependency array.","ArrayExpression",["86"],"no-new-object",["87"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getProjectDetails'. Either include it or remove the dependency array.",["88"],"React Hook useEffect has missing dependencies: 'getChangeProposals' and 'getMyChanges'. Either include them or remove the dependency array.",["89"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'animControls'. Either include it or remove the dependency array.",["90"],{"desc":"91","fix":"92"},"no-object-constructor",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [checkWalletConnection, getLastProjects, isConnected]",{"range":"99","text":"100"},"Update the dependencies array to be: [getProjectDetails]",{"range":"101","text":"102"},"Update the dependencies array to be: [contract, getChangeProposals, getMyChanges]",{"range":"103","text":"104"},"Update the dependencies array to be: [animControls]",{"range":"105","text":"106"},[2541,2577],"[checkWalletConnection, getLastProjects, isConnected]",[6860,6862],"[getProjectDetails]",[3415,3425],"[contract, getChangeProposals, getMyChanges]",[1262,1264],"[animControls]"]