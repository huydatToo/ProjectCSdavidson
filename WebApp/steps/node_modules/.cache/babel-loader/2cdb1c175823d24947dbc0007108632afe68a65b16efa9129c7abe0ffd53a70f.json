{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\davidson\\\\project\\\\DavidsonProject\\\\WebApp\\\\steps\\\\src\\\\pages\\\\ProjectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport folder from '../assets/folder.svg';\nimport { useWallet } from '../utils/WalletContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectPage = () => {\n  _s();\n  const [changes, setChanges] = useState([]);\n  const [name, setName] = useState();\n  const {\n    projectCID\n  } = useParams();\n  const {\n    contract\n  } = useWallet();\n  const getProjectName = async () => {\n    const projectName = await contract.getProjectName(projectCID);\n    const changes = await contract.getProjectChanges(projectCID);\n    setChanges(changes);\n    setnam;\n  };\n  const checkProjectState = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/check_project/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"changes\": changes\n        })\n      });\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  const getProjectFiles = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/downloadproject/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"changes\": [1, 2, 3, 4]\n        })\n      });\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background middle center gapLines\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line projectHeaderLine\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projectHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: projectCID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projectHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: projectCID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projectHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Up to date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line projectListFiles\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FileLine\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"FileText\",\n          children: \"File name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"FileText\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DirLine\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"FileText\",\n          children: \"File name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"FileText\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectPage, \"GgzUG9J15K60OR4IvCfsQSRHmiU=\", false, function () {\n  return [useParams, useWallet];\n});\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","folder","useWallet","jsxDEV","_jsxDEV","ProjectPage","_s","changes","setChanges","name","setName","projectCID","contract","getProjectName","projectName","getProjectChanges","setnam","checkProjectState","response","fetch","method","headers","body","JSON","stringify","error","console","getProjectFiles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/תכנות/davidson/project/DavidsonProject/WebApp/steps/src/pages/ProjectPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport folder from '../assets/folder.svg';\r\nimport { useWallet } from '../utils/WalletContext';\r\n\r\n\r\nconst ProjectPage = () => {\r\n    const [changes, setChanges] = useState([]);\r\n    const [name, setName] = useState();\r\n    const { projectCID } = useParams();\r\n    const { contract } = useWallet();\r\n\r\n\r\n    const getProjectName = async () => {\r\n        const projectName = await contract.getProjectName(projectCID);\r\n        const changes = await contract.getProjectChanges(projectCID);\r\n        setChanges(changes)\r\n        setnam\r\n    }\r\n\r\n    const checkProjectState = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/api/check_project/', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({ \"changes\": changes }),\r\n            });\r\n        \r\n        } catch (error) {\r\n            console.error('Error uploading file:', error);\r\n        }\r\n    }\r\n\r\n    const getProjectFiles = async () => {\r\n      try {\r\n          const response = await fetch('http://127.0.0.1:8000/api/downloadproject/', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ \"changes\": [1, 2, 3, 4] }),\r\n          });\r\n      \r\n      } catch (error) {\r\n          console.error('Error uploading file:', error);\r\n      }\r\n  }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    return (\r\n    <div className='background middle center gapLines'>\r\n        <div className='line projectHeaderLine'>\r\n          <div className='projectHeader'>\r\n              <h1>{projectCID}</h1>\r\n          </div>\r\n\r\n          <div className='projectHeader'>\r\n              <h1>{projectCID}</h1>\r\n          </div>\r\n\r\n          <div className='projectHeader'>\r\n              <h1>Up to date</h1>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='line projectListFiles'>\r\n                <div className='FileLine'>\r\n                    <span className='FileText'>File name</span>\r\n                    <span className='FileText'>Date</span>\r\n                </div>\r\n\r\n                <div className='DirLine'>\r\n                    <span className='FileText'>File name</span>\r\n                    <span className='FileText'>Date</span>\r\n                </div>\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ProjectPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}