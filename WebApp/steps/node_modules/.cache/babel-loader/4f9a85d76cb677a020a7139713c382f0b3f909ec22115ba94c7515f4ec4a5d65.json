{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\davidson\\\\project\\\\DavidsonProject\\\\WebApp\\\\steps\\\\src\\\\pages\\\\ProjectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectPage = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const getProjectFiles = () => {};\n  useEffect(() => {\n    return () => {\n      const getProject = async () => {\n        try {\n          const response = await fetch('http://127.0.0.1:8000/api/upload', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              path\n            })\n          });\n          if (!response.ok) {\n            throw new Error('Failed to upload file');\n          }\n          const data = await response.json();\n          const _CID = data.ipfsCID;\n          console.log(_CID);\n          await contract.createProject(_CID);\n        } catch (error) {\n          console.error('Error uploading file:', error);\n        }\n      };\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background middle center gapLines\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line projectHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: projectId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line projectListFiles\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FileLine\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"FileText\",\n          children: \"File name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"FileText\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectPage, \"4IfXyzbgoipBo0Hs+1wQiD0OED8=\", false, function () {\n  return [useParams];\n});\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["React","useEffect","useParams","jsxDEV","_jsxDEV","ProjectPage","_s","projectId","getProjectFiles","getProject","response","fetch","method","headers","body","JSON","stringify","path","ok","Error","data","json","_CID","ipfsCID","console","log","contract","createProject","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/תכנות/davidson/project/DavidsonProject/WebApp/steps/src/pages/ProjectPage.js"],"sourcesContent":["import React, {useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nconst ProjectPage = () => {\r\n    const { projectId } = useParams();\r\n\r\n    const getProjectFiles = () => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n      return () => {\r\n        const getProject = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:8000/api/upload', {\r\n                  method: 'POST',\r\n                  headers: {\r\n                    'Content-Type': 'application/json',\r\n                  },\r\n                  body: JSON.stringify({ path }),\r\n                });\r\n            \r\n                if (!response.ok) {\r\n                  throw new Error('Failed to upload file')\r\n                }\r\n            \r\n                const data = await response.json(); \r\n                const _CID = data.ipfsCID;\r\n                console.log(_CID)\r\n                await contract.createProject(_CID)\r\n    \r\n            } catch (error) {\r\n                console.error('Error uploading file:', error);\r\n            }\r\n        }\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n    <div className='background middle center gapLines'>\r\n        <div className='line projectHeader'>\r\n            <h1>{projectId}</h1>\r\n        </div>\r\n\r\n        <div className='line projectListFiles'>\r\n                <div className='FileLine'>\r\n                    <span className='FileText'>File name</span>\r\n                    <span className='FileText'>Date</span>\r\n                </div>\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ProjectPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC5C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAU,CAAC,GAAGL,SAAS,CAAC,CAAC;EAEjC,MAAMM,eAAe,GAAGA,CAAA,KAAM,CAE9B,CAAC;EAEDP,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;QAC3B,IAAI;UACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;YAC/DC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEC;YAAK,CAAC;UAC/B,CAAC,CAAC;UAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;UAC1C;UAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;UAClC,MAAMC,IAAI,GAAGF,IAAI,CAACG,OAAO;UACzBC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;UACjB,MAAMI,QAAQ,CAACC,aAAa,CAACL,IAAI,CAAC;QAEtC,CAAC,CAAC,OAAOM,KAAK,EAAE;UACZJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QACjD;MACJ,CAAC;IACH,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACAxB,OAAA;IAAKyB,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAC9C1B,OAAA;MAAKyB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eAC/B1B,OAAA;QAAA0B,QAAA,EAAKvB;MAAS;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eAEN9B,OAAA;MAAKyB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eAC9B1B,OAAA;QAAKyB,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACrB1B,OAAA;UAAMyB,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3C9B,OAAA;UAAMyB,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEV,CAAC;AAAA5B,EAAA,CAlDKD,WAAW;EAAA,QACSH,SAAS;AAAA;AAAAiC,EAAA,GAD7B9B,WAAW;AAoDjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}