{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/User/Desktop/\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA/davidson/project/DavidsonProject/WebApp/steps/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/User/Desktop/\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA/davidson/project/DavidsonProject/WebApp/steps/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/User/Desktop/\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA/davidson/project/DavidsonProject/WebApp/steps/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// WalletContext.js\nimport React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var WalletContext=/*#__PURE__*/createContext();export var WalletProvider=function WalletProvider(_ref){var children=_ref.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isConnected=_useState2[0],setIsConnected=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),account=_useState4[0],setAccount=_useState4[1];var provider=new ethers.providers.Web3Provider(window.ethereum);var signer=provider.getSigner();var checkWalletConnection=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var accounts;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!window.ethereum){_context.next=11;break;}_context.prev=1;_context.next=4;return window.ethereum.request({method:'eth_accounts'});case 4:accounts=_context.sent;if(accounts.length>0){setIsConnected(true);setAccount(accounts[0]);}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.error(\"Error checking wallet connection:\",_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[1,8]]);}));return function checkWalletConnection(){return _ref2.apply(this,arguments);};}();var values={account:account,isConnected:isConnected,checkWalletConnection:checkWalletConnection,setIsConnected:setIsConnected,setAccount:setAccount,provider:provider,signer:signer};return/*#__PURE__*/_jsx(WalletContext.Provider,{value:values,children:children});};export var useWallet=function useWallet(){return useContext(WalletContext);};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","WalletContext","WalletProvider","_ref","children","_useState","_useState2","_slicedToArray","isConnected","setIsConnected","_useState3","_useState4","account","setAccount","provider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","checkWalletConnection","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","accounts","wrap","_callee$","_context","prev","next","request","method","sent","length","t0","console","error","stop","apply","arguments","values","Provider","value","useWallet"],"sources":["C:/Users/User/Desktop/תכנות/davidson/project/DavidsonProject/WebApp/steps/src/utils/WalletContext.js"],"sourcesContent":["// WalletContext.js\r\nimport React, { createContext, useContext, useState } from 'react';\r\n\r\nconst WalletContext = createContext();\r\n\r\nexport const WalletProvider = ({ children }) => {\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [account, setAccount] = useState(null);\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n    const signer = provider.getSigner()\r\n  \r\n    const checkWalletConnection = async () => {\r\n        if (window.ethereum) {\r\n          try {\r\n            const accounts = await window.ethereum.request({ method: 'eth_accounts' });\r\n            if (accounts.length > 0) {\r\n              setIsConnected(true);\r\n              setAccount(accounts[0]);\r\n            }\r\n          } catch (error) {\r\n            console.error(\"Error checking wallet connection:\", error);\r\n          }\r\n        }\r\n    };\r\n    \r\n\r\n  const values = {\r\n    account,\r\n    isConnected,\r\n    checkWalletConnection,\r\n    setIsConnected,\r\n    setAccount,\r\n    provider,\r\n    signer\r\n  };\r\n\r\n  return (\r\n    <WalletContext.Provider value={values}>\r\n      {children}\r\n    </WalletContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useWallet = () => {\r\n  return useContext(WalletContext);\r\n};\r\n"],"mappings":"wjBAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,GAAM,CAAAC,aAAa,cAAGL,aAAa,CAAC,CAAC,CAErC,MAAO,IAAM,CAAAM,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAAC,IAAA,CAAqB,IAAf,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CACrC,IAAAC,SAAA,CAAsCP,QAAQ,CAAC,KAAK,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA9CG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAClC,IAAAI,UAAA,CAA8BZ,QAAQ,CAAC,IAAI,CAAC,CAAAa,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAArCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAC1B,GAAM,CAAAG,QAAQ,CAAG,GAAI,CAAAC,MAAM,CAACC,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC,CACnE,GAAM,CAAAC,MAAM,CAAGN,QAAQ,CAACO,SAAS,CAAC,CAAC,CAEnC,GAAM,CAAAC,qBAAqB,6BAAAC,KAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,QAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,aACtBf,MAAM,CAACC,QAAQ,EAAAY,QAAA,CAAAE,IAAA,WAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAEQ,CAAAf,MAAM,CAACC,QAAQ,CAACe,OAAO,CAAC,CAAEC,MAAM,CAAE,cAAe,CAAC,CAAC,QAApEP,QAAQ,CAAAG,QAAA,CAAAK,IAAA,CACd,GAAIR,QAAQ,CAACS,MAAM,CAAG,CAAC,CAAE,CACvB5B,cAAc,CAAC,IAAI,CAAC,CACpBI,UAAU,CAACe,QAAQ,CAAC,CAAC,CAAC,CAAC,CACzB,CAACG,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAO,EAAA,CAAAP,QAAA,aAEDQ,OAAO,CAACC,KAAK,CAAC,mCAAmC,CAAAT,QAAA,CAAAO,EAAO,CAAC,CAAC,yBAAAP,QAAA,CAAAU,IAAA,MAAAd,OAAA,gBAGjE,kBAZK,CAAAL,qBAAqBA,CAAA,SAAAC,KAAA,CAAAmB,KAAA,MAAAC,SAAA,OAY1B,CAGH,GAAM,CAAAC,MAAM,CAAG,CACbhC,OAAO,CAAPA,OAAO,CACPJ,WAAW,CAAXA,WAAW,CACXc,qBAAqB,CAArBA,qBAAqB,CACrBb,cAAc,CAAdA,cAAc,CACdI,UAAU,CAAVA,UAAU,CACVC,QAAQ,CAARA,QAAQ,CACRM,MAAM,CAANA,MACF,CAAC,CAED,mBACEpB,IAAA,CAACC,aAAa,CAAC4C,QAAQ,EAACC,KAAK,CAAEF,MAAO,CAAAxC,QAAA,CACnCA,QAAQ,CACa,CAAC,CAE7B,CAAC,CAED,MAAO,IAAM,CAAA2C,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAA,CAAS,CAC7B,MAAO,CAAAlD,UAAU,CAACI,aAAa,CAAC,CAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}