{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA\\\\davidson\\\\project\\\\DavidsonProject\\\\WebApp\\\\steps\\\\src\\\\pages\\\\ProjectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useWallet } from '../utils/WalletContext';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport HomeSvg from '../assets/home.svg';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectPage = () => {\n  _s();\n  const {\n    contract\n  } = useWallet();\n  const navigate = useNavigate();\n  const [project, setProject] = useState({\n    changes: [],\n    projectName: \"\",\n    state: -1,\n    files: [],\n    path: ''\n  });\n  const {\n    projectCID\n  } = useParams();\n  const [copy, setCopy] = useState(false);\n  const copyText = () => {\n    navigator.clipboard.writeText(projectCID);\n    setCopy(true);\n    setTimeout(() => {\n      setCopy(false);\n    }, 1000);\n  };\n  function comparePaths(path1, path2) {\n    const dir1 = path1.substring(0, path1.lastIndexOf('/') + 1);\n    const dir2 = path2.substring(0, path2.lastIndexOf('/') + 1);\n    return dir1 === dir2;\n  }\n  function getFileNameFromPath(filePath) {\n    const pathComponents = filePath.split('/');\n    return pathComponents[pathComponents.length - 1];\n  }\n  const getFilesHtml = () => {\n    return project.files.map((fileName, index) => comparePaths(project.path, fileName) ? fileName.includes(\".\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FileLine\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"FileText\",\n        children: getFileNameFromPath(fileName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"FileText\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setProject({\n        ...project,\n        path: fileName + \"/\"\n      }),\n      className: \"DirLine\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"FileText\",\n        children: getFileNameFromPath(fileName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"FileText\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this) : null);\n  };\n  const getProjectDetails = async () => {\n    const projectName = await contract.getProjectName(projectCID);\n    const changes = await contract.getProjectChanges(projectCID);\n    let currentProjectState = {\n      state: -1,\n      projectName: projectName,\n      changes: changes,\n      files: [],\n      path: ''\n    };\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/check-project', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"projectName\": currentProjectState.projectName,\n          \"changes\": currentProjectState.changes\n        })\n      });\n      const data = await response.json();\n      if (data[\"message\"] === 353) {\n        currentProjectState = {\n          ...currentProjectState,\n          state: 353\n        };\n      } else if (data[\"message\"] === 354) {\n        currentProjectState = {\n          ...currentProjectState,\n          state: 354\n        };\n      } else if (data[\"message\"] === 351) {\n        currentProjectState = {\n          ...currentProjectState,\n          state: 351\n        };\n      }\n      try {\n        const response = await fetch('http://127.0.0.1:8000/api/get_project_files', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"changes\": changes\n          })\n        });\n        const data = await response.json();\n        currentProjectState = {\n          ...currentProjectState,\n          files: data[\"files\"]\n        };\n      } catch (error) {\n        console.error('Error uploading file:', error);\n      }\n    } catch (error) {\n      console.error(\"Can't get project details\", error);\n    }\n    setProject(currentProjectState);\n  };\n  const getState = () => {\n    if (project.state === 353) {\n      return \"Not Downloaded\";\n    } else if (project.state === 354) {\n      return \"Latest Version\";\n    } else if (project.state === 351) {\n      return \"Need Update\";\n    }\n  };\n  useEffect(() => {\n    try {\n      getProjectDetails();\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background middle center gapLines\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line projectHeaderLine\",\n      children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n        initial: true,\n        mode: \"wait\",\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          whileTap: {\n            scale: 0.9\n          },\n          whileHover: {\n            scale: 1.03\n          },\n          initial: {\n            opacity: 0,\n            scale: 0.8\n          },\n          animate: {\n            opacity: 1,\n            scale: 1\n          },\n          exit: {\n            scale: .91\n          },\n          transition: {\n            type: \"spring\",\n            duration: 0.6\n          },\n          onClick: () => copyText(),\n          className: \"projectHeader CIDheader\",\n          children: /*#__PURE__*/_jsxDEV(motion.h1, {\n            className: copy ? \"\" : \"CIDtext\",\n            children: copy ? \"CID copied\" : projectCID.slice(0, 15)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        whileTap: {\n          scale: 0.9\n        },\n        whileHover: {\n          scale: 1.03\n        },\n        initial: {\n          opacity: 0,\n          scale: 0.8\n        },\n        animate: {\n          opacity: 1,\n          scale: 1\n        },\n        exit: {\n          scale: .91\n        },\n        transition: {\n          type: \"spring\",\n          duration: 0.6\n        },\n        onClick: () => {\n          navigate('/');\n        },\n        className: \"projectHeader borderPixel HomeButtonDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"HomeButton\",\n          src: HomeSvg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          scale: 0.8\n        },\n        animate: {\n          opacity: 1,\n          scale: 1\n        },\n        exit: {\n          scale: .91\n        },\n        transition: {\n          type: \"spring\",\n          duration: 0.6\n        },\n        className: \"projectHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: project.projectName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          scale: 0.8\n        },\n        animate: {\n          opacity: 1,\n          scale: 1\n        },\n        exit: {\n          scale: .91\n        },\n        transition: {\n          type: \"spring\",\n          duration: 0.6\n        },\n        className: \"projectHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: getState()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line projectListFiles\",\n      children: [project.path ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FileLine\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"FileText\",\n          children: getFileNameFromPath(fileName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"FileText\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this) : null, getFilesHtml()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectPage, \"EeaVfSj7gYPifJwGSjkE7hPFvyo=\", false, function () {\n  return [useWallet, useNavigate, useParams];\n});\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useWallet","motion","AnimatePresence","HomeSvg","useNavigate","jsxDEV","_jsxDEV","ProjectPage","_s","contract","navigate","project","setProject","changes","projectName","state","files","path","projectCID","copy","setCopy","copyText","navigator","clipboard","writeText","setTimeout","comparePaths","path1","path2","dir1","substring","lastIndexOf","dir2","getFileNameFromPath","filePath","pathComponents","split","length","getFilesHtml","map","fileName","index","includes","className","children","_jsxFileName","lineNumber","columnNumber","onClick","getProjectDetails","getProjectName","getProjectChanges","currentProjectState","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","getState","initial","mode","div","whileTap","scale","whileHover","opacity","animate","exit","transition","type","duration","h1","slice","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/תכנות/davidson/project/DavidsonProject/WebApp/steps/src/pages/ProjectPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useWallet } from '../utils/WalletContext';\r\nimport { motion, AnimatePresence  } from 'framer-motion';\r\nimport HomeSvg from '../assets/home.svg';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ProjectPage = () => {\r\n    const { contract } = useWallet();\r\n    const navigate = useNavigate()\r\n    const [project, setProject] = useState({changes: [], projectName: \"\", state: -1, files: [], path: ''});\r\n    const { projectCID } = useParams();\r\n    const [copy, setCopy] = useState(false)\r\n\r\n    const copyText = () => {\r\n        navigator.clipboard.writeText(projectCID)\r\n        setCopy(true)\r\n        setTimeout(() => {\r\n            setCopy(false)\r\n        }, 1000);\r\n    }\r\n\r\n    function comparePaths(path1, path2) {\r\n      const dir1 = path1.substring(0, path1.lastIndexOf('/') + 1);\r\n      const dir2 = path2.substring(0, path2.lastIndexOf('/') + 1);\r\n    \r\n      return dir1 === dir2;\r\n    }\r\n\r\n    function getFileNameFromPath(filePath) {\r\n      const pathComponents = filePath.split('/');\r\n      return pathComponents[pathComponents.length - 1];\r\n    }\r\n\r\n    const getFilesHtml = () => {\r\n      return project.files.map((fileName, index) => (\r\n        comparePaths(project.path, fileName) ? (\r\n        fileName.includes(\".\") ? (\r\n            <div className='FileLine' key={index}>\r\n                <span className='FileText'>{getFileNameFromPath(fileName)}</span>\r\n                <span className='FileText'>Date</span>\r\n            </div>\r\n        ) : (\r\n            <div onClick={() => setProject({...project, path: fileName + \"/\"})} className='DirLine' key={index}>\r\n                <span className='FileText'>{getFileNameFromPath(fileName)}</span>\r\n                <span className='FileText'>Date</span>\r\n            </div>\r\n        )) : null\r\n    ))}\r\n\r\n    const getProjectDetails = async () => {\r\n      const projectName = await contract.getProjectName(projectCID);\r\n      const changes = await contract.getProjectChanges(projectCID);\r\n      let currentProjectState = {state: -1, projectName: projectName, changes: changes, files: [], path: ''}\r\n\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:8000/api/check-project', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ \"projectName\": currentProjectState.projectName, \"changes\": currentProjectState.changes })\r\n        });\r\n\r\n        const data = await response.json(); \r\n\r\n        if (data[\"message\"] === 353) {\r\n          currentProjectState = {...currentProjectState, state: 353}\r\n        } else if (data[\"message\"] === 354) {\r\n          currentProjectState = {...currentProjectState, state: 354}\r\n        } else if (data[\"message\"] === 351) {\r\n          currentProjectState = {...currentProjectState, state: 351}\r\n        }\r\n        try {\r\n          const response = await fetch('http://127.0.0.1:8000/api/get_project_files', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ \"changes\": changes }),\r\n          });\r\n\r\n          const data = await response.json(); \r\n          currentProjectState = {...currentProjectState, files: data[\"files\"]}\r\n          \r\n        } catch (error) {\r\n            console.error('Error uploading file:', error);\r\n        }\r\n    \r\n      } catch (error) {\r\n          console.error(\"Can't get project details\", error);\r\n      }\r\n      setProject(currentProjectState)\r\n\r\n  }\r\n\r\n  const getState = () => {\r\n    if (project.state === 353) {\r\n      return \"Not Downloaded\"\r\n    } else if (project.state === 354) {\r\n      return \"Latest Version\"\r\n    } else if (project.state === 351) {\r\n      return \"Need Update\"\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n      try {\r\n          getProjectDetails()\r\n      } catch (error) {\r\n          console.error('Error uploading file:', error);\r\n      }\r\n  }, []);\r\n\r\n    return (\r\n    <div className='background middle center gapLines'>\r\n        <div className='line projectHeaderLine'>\r\n        <AnimatePresence initial={true} mode='wait'>\r\n          <motion.div whileTap={{scale: 0.9}} whileHover={{scale: 1.03}} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: .91 }} transition={{ type: \"spring\", duration: 0.6 }} onClick={() => copyText()} className='projectHeader CIDheader'>\r\n                    <motion.h1 className={copy ? \"\" : \"CIDtext\"}>{copy ? \"CID copied\" : projectCID.slice(0, 15)}</motion.h1>\r\n          </motion.div>\r\n        </AnimatePresence>\r\n\r\n        <motion.div whileTap={{scale: 0.9}} whileHover={{scale: 1.03}} initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: .91 }} transition={{ type: \"spring\", duration: 0.6 }} onClick={() => {navigate('/')}} className='projectHeader borderPixel HomeButtonDiv'>\r\n            <img className=\"HomeButton\" src={HomeSvg} alt=\"\" />\r\n        </motion.div>\r\n\r\n\r\n          <motion.div  initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: .91 }} transition={{ type: \"spring\", duration: 0.6 }} className='projectHeader'>\r\n            <h1>{project.projectName}</h1>\r\n          </motion.div>\r\n\r\n          <motion.div  initial={{ opacity: 0, scale: 0.8 }} animate={{ opacity: 1, scale: 1 }} exit={{scale: .91 }} transition={{ type: \"spring\", duration: 0.6 }} className='projectHeader'>\r\n            <h1>{getState()}</h1>\r\n          </motion.div>\r\n        </div>\r\n\r\n        <div className='line projectListFiles'>\r\n        {project.path ? \r\n        <div className='FileLine' key={index}>\r\n          <span className='FileText'>{getFileNameFromPath(fileName)}</span>\r\n          <span className='FileText'>Date</span>\r\n        </div> : null}\r\n        {getFilesHtml()}\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ProjectPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}