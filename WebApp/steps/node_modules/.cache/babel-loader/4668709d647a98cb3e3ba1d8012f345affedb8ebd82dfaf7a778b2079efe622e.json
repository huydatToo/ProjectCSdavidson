{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/User/Desktop/\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA/davidson/project/DavidsonProject/WebApp/steps/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _templateObject;\nimport e from \"react\";\nimport a from \"@metamask/jazzicon\";\nimport r from \"@emotion/styled\";\nvar s = {},\n  t = function t(e) {\n    var r = e.address,\n      t = e.size;\n    if (!r || 42 !== r.length) return \"\";\n    var i = \"\".concat(t, \"-\").concat(r);\n    if (s[i]) return s[i];\n    var l = parseInt(r.slice(2, 10), 16),\n      n = a(t, l).firstChild;\n    if (!n) return;\n    var d = new XMLSerializer().serializeToString(n),\n      g = \"data:image/svg+xml,\".concat((o = d, o.replace(\"<svg\", ~o.indexOf(\"xmlns\") ? \"<svg\" : '<svg xmlns=\"http://www.w3.org/2000/svg\"').replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/{/g, \"%7B\").replace(/}/g, \"%7D\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \")));\n    var o;\n    return s[i] = g, g;\n  },\n  i = r(\"div\", {\n    shouldForwardProp: function shouldForwardProp(e) {\n      return \"size\" !== e;\n    }\n  })(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  border-radius: 50%;\\n  padding: 0;\\n  margin: 0;\\n  display: inline-block;\\n  background: rgb(242, 98, 2);\\n  overflow: hidden;\\n  width: \", \"px;\\n  height: \", \"px;\\n\"])), function (_ref) {\n    var e = _ref.size;\n    return e;\n  }, function (_ref2) {\n    var e = _ref2.size;\n    return e;\n  }),\n  l = function l(_ref3) {\n    var _ref3$size = _ref3.size,\n      a = _ref3$size === void 0 ? 24 : _ref3$size,\n      r = _ref3.address,\n      s = _ref3.className;\n    return r && 42 === r.length ? e.createElement(i, {\n      className: s,\n      \"data-testid\": \"MetaMaskAvatar-AvatarWrapper\",\n      size: a\n    }, e.createElement(\"img\", {\n      alt: \"avatar\",\n      \"data-testid\": \"MetaMaskAvatar-Image-\".concat(a, \"x\").concat(a),\n      src: t({\n        address: r,\n        size: a\n      })\n    })) : null;\n  };\nexport { l as MetaMaskAvatar };","map":{"version":3,"names":["s","t","e","r","address","size","length","i","concat","l","parseInt","slice","n","a","firstChild","d","XMLSerializer","serializeToString","g","o","replace","indexOf","shouldForwardProp","_templateObject","_taggedTemplateLiteral","_ref","_ref2","_ref3","_ref3$size","className","createElement","alt","src","MetaMaskAvatar"],"sources":["C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\node_modules\\react-metamask-avatar\\src\\getMetamaskAvatar\\index.ts","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\node_modules\\react-metamask-avatar\\src\\encodeSvg\\index.ts","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\node_modules\\react-metamask-avatar\\src\\MetaMaskAvatar\\MetaMaskAvatar.styled.tsx","C:\\Users\\User\\Desktop\\תכנות\\davidson\\project\\DavidsonProject\\WebApp\\steps\\node_modules\\react-metamask-avatar\\src\\MetaMaskAvatar\\index.tsx"],"sourcesContent":["import jazzicon from '@metamask/jazzicon';\n\nimport { encodeSvg } from '../encodeSvg';\n\ntype ResolveAvatarParam = {\n  address?: string | null;\n  size: number;\n};\nconst CACHE: Record<string, string> = {};\n\n/*\n * A function that takes in an address and a size and returns a string.\n * It's generating a unique metamask avatar for a given address using the algorithm taken from metamask repo.\n */\nexport const getMetamaskAvatar = (payload: ResolveAvatarParam) => {\n  const { address, size } = payload;\n  if (!address || address.length !== 42) {\n    return '';\n  }\n  const cacheId = `${size}-${address}`;\n  if (CACHE[cacheId]) {\n    return CACHE[cacheId];\n  }\n  // https://github.com/MetaMask/metamask-filecoin-developer-beta/blob/4ec4bf9995e64bfb0eb732cbe10ae2f2bac2ddff/ui/lib/icon-factory.js#L65\n  const seed = parseInt(address.slice(2, 10), 16);\n  const divWithSvg = jazzicon(size, seed);\n\n  const svg = divWithSvg.firstChild;\n  if (!svg) {\n    return;\n  }\n  const xmlSerializer = new XMLSerializer();\n  const str = xmlSerializer.serializeToString(svg);\n  const dataUrl = `data:image/svg+xml,${encodeSvg(str)}`;\n  CACHE[cacheId] = dataUrl;\n  return dataUrl;\n};\n","/* Encoding the SVG string so that it can be used in a URL. */\n/**\n * It takes a string of SVG markup and returns a string of HTML markup\n * @param {string} svgString - The SVG string to encode.\n */\nexport function encodeSvg(svgString: string): string {\n  return svgString\n    .replace(\n      '<svg',\n      ~svgString.indexOf('xmlns') ? '<svg' : '<svg xmlns=\"http://www.w3.org/2000/svg\"',\n    )\n    .replace(/\"/g, \"'\")\n    .replace(/%/g, '%25')\n    .replace(/#/g, '%23')\n    .replace(/{/g, '%7B')\n    .replace(/}/g, '%7D')\n    .replace(/</g, '%3C')\n    .replace(/>/g, '%3E')\n    .replace(/\\s+/g, ' ');\n}\n","import styled from '@emotion/styled';\n\nexport const AvatarWrapper = styled('div', {\n  shouldForwardProp: (prop) => prop !== 'size',\n})<{\n  size: number;\n}>`\n  border-radius: 50%;\n  padding: 0;\n  margin: 0;\n  display: inline-block;\n  background: rgb(242, 98, 2);\n  overflow: hidden;\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n`;\n","import React from 'react';\n\nimport { getMetamaskAvatar } from '../getMetamaskAvatar';\nimport { AvatarWrapper } from './MetaMaskAvatar.styled';\n\n/**\n */\n/**\n * `MetaMaskAvatarProps` has a required `address` property of type `string` and an optional `size` property\n * of type `number`.\n * @property {string} address - The address of the account to get the avatar for. Expecting a string of length 42 that represents Ethereum address\n * @property {number} size - The size of the avatar in pixels.\n * @property {string} className - A string that will be added to the className of the wrapper component. Allows custom styling using: https://emotion.sh/docs/styled#styling-any-component\n */\nexport type MetaMaskAvatarProps = {\n  address: string;\n  size?: number;\n  className?: string;\n};\n\nexport const MetaMaskAvatar: React.FunctionComponent<MetaMaskAvatarProps> = ({\n  size = 24,\n  address,\n  className,\n}) => {\n  if (!address || address.length !== 42) {\n    return null;\n  }\n\n  return (\n    <AvatarWrapper className={className} data-testid=\"MetaMaskAvatar-AvatarWrapper\" size={size}>\n      <img\n        alt=\"avatar\"\n        data-testid={`MetaMaskAvatar-Image-${size}x${size}`}\n        src={getMetamaskAvatar({\n          address,\n          size,\n        })}\n      />\n    </AvatarWrapper>\n  );\n};\n"],"mappings":";;;;;AAQA,IAAMA,CAAA,GAAgC;EAMzBC,CAAA,GAAqB,SAAAA,EAAAC,CAAA;IAChC,IAAQC,CAAA,GAAkBD,CAAA,CAApBE,OAAA;MAAWH,CAAA,GAASC,CAAA,CAAXG,IAAA;IACf,KAAKF,CAAA,IAA8B,OAAnBA,CAAA,CAAQG,MAAA,EACtB,OAAO;IAET,IAAMC,CAAA,MAAAC,MAAA,CAAaP,CAAA,OAAAO,MAAA,CAAQL,CAAA;IAC3B,IAAIH,CAAA,CAAMO,CAAA,GACR,OAAOP,CAAA,CAAMO,CAAA;IAGf,IAAME,CAAA,GAAOC,QAAA,CAASP,CAAA,CAAQQ,KAAA,CAAM,GAAG,KAAK;MAGtCC,CAAA,GAFaC,CAAA,CAASZ,CAAA,EAAMQ,CAAA,EAEXK,UAAA;IACvB,KAAKF,CAAA,EACH;IAEF,IACMG,CAAA,GADgB,IAAIC,aAAA,GACAC,iBAAA,CAAkBL,CAAA;MACtCM,CAAA,yBAAAV,MAAA,EC5BkBW,CAAA,GD4BwBJ,CAAA,EC3BzCI,CAAA,CACJC,OAAA,CACC,SACCD,CAAA,CAAUE,OAAA,CAAQ,WAAW,SAAS,2CAExCD,OAAA,CAAQ,MAAM,KACdA,OAAA,CAAQ,MAAM,OACdA,OAAA,CAAQ,MAAM,OACdA,OAAA,CAAQ,MAAM,OACdA,OAAA,CAAQ,MAAM,OACdA,OAAA,CAAQ,MAAM,OACdA,OAAA,CAAQ,MAAM,OACdA,OAAA,CAAQ,QAAQ;IAbf,IAAoBD,CAAA;ID8BxB,OADAnB,CAAA,CAAMO,CAAA,IAAWW,CAAA,EACVA,CAAO;EAAA;EEjCHX,CAAA,GAAgBJ,CAAA,CAAO,OAAO;IACzCmB,iBAAA,EAAoB,SAAAA,kBAAApB,CAAA;MAAA,OAAkB,WAATA,CAAA;IAAA;EAAA,EAG7B,CAAAqB,eAAA,KAAAA,eAAA,GAAAC,sBAAA,mLAOS,UAAAC,IAAA;IAAA,IAAGvB,CAAA,GAAAuB,IAAA,CAAApB,IAAA;IAAA,OAAWH,CAAA;EAAA,GACb,UAAAwB,KAAA;IAAA,IAAGxB,CAAA,GAAAwB,KAAA,CAAArB,IAAA;IAAA,OAAWH,CAAA;EAAA,E;ECMbO,CAAA,GAA+D,SAA/DA,EAAAkB,KAAA;IAAA,IAAAC,UAAA,GAAAD,KAAA,CACXtB,IAAA;MAAAQ,CAAA,GAAAe,UAAA,cAAO,KAAAA,UAAA;MACPzB,CAAA,GAAAwB,KAAA,CAAAvB,OAAA;MACAJ,CAAA,GAAA2B,KAAA,CAAAE,SAAA;IAAA,OAEK1B,CAAA,IAA8B,OAAnBA,CAAA,CAAQG,MAAA,GAKtBJ,CAAA,CAAA4B,aAAA,CAACvB,CAAA,EAAa;MAACsB,SAAA,EAAW7B,CAAA;MAAS,eAAc;MAA+BK,IAAA,EAAMQ;IAAA,GACpFX,CAAA,CAAA4B,aAAA;MACEC,GAAA,EAAI;MAAQ,uCAAAvB,MAAA,CACyBK,CAAA,OAAAL,MAAA,CAAQK,CAAA;MAC7CmB,GAAA,EAAK/B,CAAA,CAAkB;QACrBG,OAAA,EAAAD,CAAA;QACAE,IAAA,EAAAQ;MAAA;IAAA,MAVC;EAAA;AAAA,SAAAJ,CAAA,IAAAwB,cAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}